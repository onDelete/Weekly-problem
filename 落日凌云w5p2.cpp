//* 
//* @author wtlusvm
//* @date   29/03/2016
//* 
//* 代码中含有C++11语言特性，请使用支持C++11的编译器编译
//* 
//* 
//* 问题2：草原模拟题 （我觉得这道题比较有趣） 这道题并不是什么算法题，是为了鼓励大家写出模块化的程序，
//* 写出逻辑性强，易修改的程序。
//* 
//* 有一片草原上生活着兔子和狼，当然还有草。草，兔子和狼的个数分别是x, y, z。 他们的生物链规则是这样的，
//* 每两只兔子可以生一只兔子，每两条狼可以生一只狼。但是他们繁育的条件是必须吃掉相同个数的食物，
//* 比如两只兔子要想生一只小兔子，那他们就要吃两根草。草的个数每天都是以二的倍数生长着。
//* 比如第一天有3根草，第二天就有6根。我们还要设个规定，草是每天都生长的，但是兔子是每两天吃一次草，
//* 狼是每三天吃一次兔子（第一天他们都想吃，如果可能的话）。
//* 
//* 在这个问题里，我们假设生物都不会自然死亡。而如果食物的个数小于等于2，他们就得等。
//* 
//* 举个栗子：
//* 假如一开始有4根草，2只兔子，2条狼。那么第一天兔子可以吃草，狼不能吃兔子，而草可以生长。
//* 他们行动的顺序是狼->兔子->草。
//* 
//* 那么第一天（初始值） : x = 4 y = 2 z = 2 (草兔子狼都想繁育，但是狼不能吃，兔子可以，草剩2再乘2）
//* 	第二天 : x = 4 y = 3 z = 2 （只有草想繁育，草翻倍）
//* 	第三天 : x = 8 y = 3 z = 2  （草兔子想繁育，兔子能生一只小兔子，草剩6再乘二）
//* 	第四天： x = 12 y = 4 z = 2 （草狼想繁育，兔子剩2，狼能生一只小狼，草乘2）
//* 	第五天： x = 24 y = 2 z = 3  （草，兔子想繁育，兔子成为3，草剩18乘2）
//* 问题是，假如草原上一开始有5根草，33只兔子，3条狼，那么多少天后狼的数量能达到 50 呢？

#include <iostream>
#include "Week5Question2.h"

int main()
{
	Autotroph Glass(5);
	Consumer Rabbits(33, 2);
	Consumer Wolves(3, 2, 3);
	std::cout << "顶级消费者数量：";
	int n;
	std::cin >> n;
	std::cout << Calculator(Glass, Rabbits, Wolves, n);
	return 0;
}
